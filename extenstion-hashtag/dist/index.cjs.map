{"version":3,"file":"index.cjs","sources":["../src/hashtag.ts"],"sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core'\r\nimport { Node as ProseMirrorNode } from '@tiptap/pm/model'\r\nimport { PluginKey } from '@tiptap/pm/state'\r\nimport Suggestion, { SuggestionOptions } from '@tiptap/suggestion'\r\n\r\nexport type HashtagOptions = {\r\n  HTMLAttributes: Record<string, any>\r\n  renderLabel: (props: { options: HashtagOptions; node: ProseMirrorNode }) => string\r\n  suggestion: Omit<SuggestionOptions, 'editor'>\r\n}\r\n\r\nexport const HashtagPluginKey = new PluginKey('Hashtag')\r\n\r\nexport const Hashtag = Node.create<HashtagOptions>({\r\n  name: 'Hashtag',\r\n\r\n  addOptions() {\r\n    return {\r\n      HTMLAttributes: {},\r\n      renderLabel({ options, node }) {\r\n        return `${options.suggestion.char}${node.attrs.label ?? node.attrs.id}`\r\n      },\r\n      suggestion: {\r\n        char: '#',\r\n        pluginKey: HashtagPluginKey,\r\n        command: ({ editor, range, props }) => {\r\n          // increase range.to by one when the next node is of type \"text\"\r\n          // and starts with a space character\r\n          const nodeAfter = editor.view.state.selection.$to.nodeAfter\r\n          const overrideSpace = nodeAfter?.text?.startsWith(' ')\r\n\r\n          if (overrideSpace) {\r\n            range.to += 1\r\n          }\r\n\r\n          editor\r\n            .chain()\r\n            .focus()\r\n            .insertContentAt(range, [\r\n              {\r\n                type: this.name,\r\n                attrs: props,\r\n              },\r\n              {\r\n                type: 'text',\r\n                text: ' ',\r\n              },\r\n            ])\r\n            .run()\r\n\r\n          window.getSelection()?.collapseToEnd()\r\n        },\r\n        allow: ({ state, range }) => {\r\n          const $from = state.doc.resolve(range.from)\r\n          const type = state.schema.nodes[this.name]\r\n          const allow = !!$from.parent.type.contentMatch.matchType(type)\r\n\r\n          return allow\r\n        },\r\n      },\r\n    }\r\n  },\r\n\r\n  group: 'inline',\r\n\r\n  inline: true,\r\n\r\n  selectable: false,\r\n\r\n  atom: true,\r\n\r\n  addAttributes() {\r\n    return {\r\n      id: {\r\n        default: null,\r\n        parseHTML: element => element.getAttribute('data-id'),\r\n        renderHTML: attributes => {\r\n          if (!attributes.id) {\r\n            return {}\r\n          }\r\n\r\n          return {\r\n            'data-id': attributes.id,\r\n          }\r\n        },\r\n      },\r\n\r\n      label: {\r\n        default: null,\r\n        parseHTML: element => element.getAttribute('data-label'),\r\n        renderHTML: attributes => {\r\n          if (!attributes.label) {\r\n            return {}\r\n          }\r\n\r\n          return {\r\n            'data-label': attributes.label,\r\n          }\r\n        },\r\n      },\r\n    }\r\n  },\r\n\r\n  parseHTML() {\r\n    return [\r\n      {\r\n        tag: `span[data-type=\"${this.name}\"]`,\r\n      },\r\n    ]\r\n  },\r\n\r\n  renderHTML({ node, HTMLAttributes }) {\r\n    return [\r\n      'span',\r\n      mergeAttributes({ 'data-type': this.name }, this.options.HTMLAttributes, HTMLAttributes),\r\n      this.options.renderLabel({\r\n        options: this.options,\r\n        node,\r\n      }),\r\n    ]\r\n  },\r\n\r\n  renderText({ node }) {\r\n    return this.options.renderLabel({\r\n      options: this.options,\r\n      node,\r\n    })\r\n  },\r\n\r\n  addKeyboardShortcuts() {\r\n    return {\r\n      Backspace: () => this.editor.commands.command(({ tr, state }) => {\r\n        let isHashtag = false\r\n        const { selection } = state\r\n        const { empty, anchor } = selection\r\n\r\n        if (!empty) {\r\n          return false\r\n        }\r\n\r\n        state.doc.nodesBetween(anchor - 1, anchor, (node, pos) => {\r\n          if (node.type.name === this.name) {\r\n            isHashtag = true\r\n            tr.insertText(this.options.suggestion.char || '', pos, pos + node.nodeSize)\r\n\r\n            return false\r\n          }\r\n        })\r\n\r\n        return isHashtag\r\n      }),\r\n    }\r\n  },\r\n\r\n  addProseMirrorPlugins() {\r\n    return [\r\n      Suggestion({\r\n        editor: this.editor,\r\n        ...this.options.suggestion,\r\n      }),\r\n    ]\r\n  },\r\n})\r\n"],"names":["PluginKey","Node","mergeAttributes","Suggestion"],"mappings":"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"}